#
# netfilter configuration
# 
# nft-filter.nft
#

table inet nft_filter {

  # include netblock set definitions
  include "/etc/nftables/nft-networks.nft"
  include "/etc/nftables/nft-services.nft"

  # blackholes for rate limiting
  set blackhole4 { type ipv4_addr; flags timeout; size 16384; }
  set blackhole6 { type ipv6_addr; flags timeout; size 16384; }

  # basic IPv6 connectivity needs these to function
  chain raw_prerouting {
    type filter hook prerouting priority -290; policy accept;

    icmpv6 type { nd-router-advert, nd-neighbor-solicit } ip6 hoplimit 255 accept
    meta nfproto ipv6 fib saddr . iif oif missing drop
  }

  chain bcp_filter {
    iifname "lo" accept
    ct state established,related accept
    # Note: we also need router advert here, not only in raw prerouting
    icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, 
                  parameter-problem, echo-request, echo-reply, 
                  nd-router-solicit, nd-neighbor-advert, nd-neighbor-solicit,
                  nd-router-advert
                } accept
    icmp   type { destination-unreachable, time-exceeded, parameter-problem, 
                  echo-request, echo-reply 
                } accept
    ip6 saddr { ::/96, ::ffff:0.0.0.0/96, 2002::/24, 2002:a00::/24, 2002:7f00::/24, 
                2002:a9fe::/32, 2002:ac10::/28, 2002:c0a8::/32, 2002:e000::/19, 2001:db8::/32
              } reject with icmpv6 type addr-unreachable
    ip6 daddr fe80::/64 udp dport dhcpv6-client ct state new,untracked accept
  }

  chain bcp_output {
    ip6 daddr { ::/96, ::ffff:0.0.0.0/96, 2002::/24, 2002:a00::/24, 2002:7f00::/24, 
                2002:a9fe::/32, 2002:ac10::/28, 2002:c0a8::/32, 2002:e000::/19, 2001:db8::/32
              } reject with icmpv6 type addr-unreachable
  }

  chain filter_input {
    type filter hook input priority 10; policy accept;

    jump bcp_filter

    ip6 saddr @net_dnssrc6        udp dport  53 accept
    ip  saddr @net_backupservice4 tcp dport 873 ct state new log prefix "backupservice-in: " accept
    ip6 saddr @net_backupservice6 tcp dport 873 ct state new log prefix "backupservice-in: " accept

    # ratelimit badness due to ssh probing
    ip  saddr @blackhole4 counter drop
    ip6 saddr @blackhole6 counter drop
    tcp flags syn tcp dport ssh meter flood4 size 128000 \
      { ip saddr timeout 60s limit rate over 10/minute } \
      add @blackhole4 { ip saddr timeout 5m } drop
    tcp flags syn tcp dport ssh meter flood6 size 128000 \
      { ip6 saddr timeout 60s limit rate over 10/minute } \
      add @blackhole6 { ip6 saddr timeout 5m } drop
    
    # services offered here, both logged and non-logged variants
    ip  saddr @net_trusted4    tcp dport @tcp_logging_from_trusted   ct state new log prefix "trusted-in: " accept
    ip6 saddr @net_trusted6    tcp dport @tcp_logging_from_trusted   ct state new log prefix "trusted-in: " accept
    ip  saddr @net_trusted4    tcp dport @tcp_services_from_trusted  accept
    ip6 saddr @net_trusted6    tcp dport @tcp_services_from_trusted  accept
    ip  saddr @net_local4      tcp dport @tcp_logging_from_local     ct state new log prefix "local-in: " accept
    ip6 saddr @net_local6      tcp dport @tcp_logging_from_local     ct state new log prefix "local-in: " accept
    ip  saddr @net_local4      tcp dport @tcp_services_from_local    accept
    ip6 saddr @net_local6      tcp dport @tcp_services_from_local    accept
                               tcp dport @tcp_logging_from_global    ct state new log prefix "global-in: " accept
                               tcp dport @tcp_services_from_global   accept

    ip  saddr @net_trusted4    udp dport @udp_logging_from_trusted   log prefix "trusted-in: " accept
    ip6 saddr @net_trusted6    udp dport @udp_logging_from_trusted   log prefix "trusted-in: " accept
    ip  saddr @net_trusted4    udp dport @udp_services_from_trusted  accept
    ip6 saddr @net_trusted6    udp dport @udp_services_from_trusted  accept
    ip  saddr @net_local4      udp dport @udp_logging_from_local     log prefix "local-in: " accept
    ip6 saddr @net_local6      udp dport @udp_logging_from_local     log prefix "local-in: " accept
    ip  saddr @net_local4      udp dport @udp_services_from_local    accept
    ip6 saddr @net_local6      udp dport @udp_services_from_local    accept
                               udp dport @udp_logging_from_global    log prefix "global-in: " accept
                               udp dport @udp_services_from_global   accept

    ct state invalid drop
    reject with icmpx type admin-prohibited
  }

  chain filter_forward {
    type filter hook forward priority 10; policy accept;
    ct state established,related accept
    iifname "lo" accept

    jump bcp_output

    ct state invalid drop
    reject with icmpx type admin-prohibited
  }

  chain filter_output {
    type filter hook output priority 0; policy accept;
    oifname "lo" accept

    jump bcp_output

    ct state established,related accept

    accept
  }

}
